<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jackzhang.mall.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.jackzhang.mall.model.User">
    <constructor>
      <idArg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="isfreeze" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="balance" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="state" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="zip" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, name, password, sex, address, phone, email, isfreeze, time, balance, state, 
    zip, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="login" resultMap="BaseResultMap" parameterType="map">
    SELECT
    --     *???//这样真的好么?答案就是,这样不好.
    <include refid="Base_Column_List" />
    from t_user
    where name = #{name}
    and password = #{password}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jackzhang.mall.model.User">
    insert into t_user (name, password,
      sex, address, phone, email, 
      isfreeze, time, balance, 
      state, zip, create_time
      )
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{sex,jdbcType=BIT}, #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{isfreeze,jdbcType=BIT}, #{time,jdbcType=VARCHAR}, #{balance,jdbcType=DOUBLE}, 
      #{state,jdbcType=BIT}, #{zip,jdbcType=VARCHAR},now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jackzhang.mall.model.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="isfreeze != null">
        isfreeze,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="zip != null">
        zip,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isfreeze != null">
        #{isfreeze,jdbcType=BIT},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
      <if test="zip != null">
        #{zip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jackzhang.mall.model.User">
    update t_user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isfreeze != null">
        isfreeze = #{isfreeze,jdbcType=BIT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIT},
      </if>
      <if test="zip != null">
        zip = #{zip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        now(),
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jackzhang.mall.model.User">
    update t_user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      isfreeze = #{isfreeze,jdbcType=BIT},
      time = #{time,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DOUBLE},
      state = #{state,jdbcType=BIT},
      zip = #{zip,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>

</mapper>